
tinymce.PluginManager.add('babar', function(editor, url) {
  
	function responsivefilemanager_onMessage(event){
	 console.log('Response OnMessage');
	
		if(editor.settings.external_pthBabar.toLowerCase().indexOf(event.origin.toLowerCase()) === 0){
			if(event.data.sender === 'responsivefilemanager'){
				tinymce.activeEditor.insertContent(event.data.html);
				tinymce.activeEditor.windowManager.close();

				// Remove event listener for a message from ResponsiveFilemanager
				if(window.removeEventListener){
					window.removeEventListener('message', responsivefilemanager_onMessage, false);
				} else {
					window.detachEvent('onmessage', responsivefilemanager_onMessage);
				}
			}
		}
	}  
  
  
	function OpenPicker() {
		var width = window.innerWidth-20;
		var height = window.innerHeight-40;
		if(width > 1800) width=1800;
		if(height > 1200) height=1200;
		if(width>600){
			var width_reduce = (width - 20) % 138;
			width = width - width_reduce + 10;
		}

		editor.focus(true);
		var title="Babar Picker";
		if (typeof editor.settings.filemanager_title !== "undefined" && editor.settings.filemanager_title) {
			title=editor.settings.filemanager_title;
		}

		const fileUrl = editor.settings.external_pthBabar+'file_manager.php?';
	 
	 console.log(fileUrl);
	 
	 			// Add handler for a message from ResponsiveFilemanager
			if(window.addEventListener){
				window.addEventListener('message', responsivefilemanager_onMessage, false);
			} else {
				window.attachEvent('onmessage', responsivefilemanager_onMessage);
			}
			
			

		// VERSION 5
		win = editor.windowManager.openUrl({
			title: title,
			url: fileUrl,
			width: width,
			height: height,
			inline: 1,
			resizable: true,
			maximizable: true
		});

	}
  
  
  
  
  
  
  
// BUTTON
editor.ui.registry.addButton('babar', {
	icon: 'browse',
	tooltip: 'Insert file',
	shortcut: 'Ctrl+E',
	onAction: OpenPicker
});

editor.addShortcut('Ctrl+E', '', OpenPicker);
  
  
  
  
  
  /*var openDialog = function () {
    return editor.windowManager.open({
      title: 'babar plugin',
      body: {
        type: 'panel',
        items: [
          {
            type: 'input',
            name: 'title',
            label: 'Title'
          }
        ]
      },
      buttons: [
        {
          type: 'cancel',
          text: 'Close'
        },
        {
          type: 'submit',
          text: 'Save',
          primary: true
        }
      ],
      onSubmit: function (api) {
        var data = api.getData();
        // Insert content when the window form is submitted
        editor.insertContent('Title: ' + data.title);
        api.close();
      }
    });
  };
  
  // Add a button that opens a window
  editor.ui.registry.addButton('babar', {
    text: 'My button',
    onAction: function () {
      // Open window
      openDialog();
    }
  });

  // Adds a menu item, which can then be included in any menu via the menu/menubar configuration
  editor.ui.registry.addMenuItem('babar', {
    text: 'babar plugin',
    onAction: function() {
      // Open window
      openDialog();
    }
  });

  return {
    getMetadata: function () {
      return  {
        name: "babar plugin",
        url: "http://babarplugindocsurl.com"
      };
    }
  };*/
});